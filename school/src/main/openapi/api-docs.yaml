openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
- url: http://localhost:8080
  description: Generated server url
paths:
  /api/courses/{id}/modify:
    put:
      tags:
      - course-controller
      operationId: saveChange
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CourseDto'
        required: true
      responses:
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/CourseDto'
  /api/teachers/{id}:
    get:
      tags:
      - teacher-controller
      operationId: getTeacherById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/TeacherDto'
  /api/students/{id}:
    get:
      tags:
      - student-controller
      operationId: getStudentById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/StudentDto'
  /api/courses/{id}/versions:
    get:
      tags:
      - course-controller
      operationId: getVersionAt
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: at
        in: query
        required: true
        schema:
          type: string
          format: date-time
      responses:
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/CourseDto'
  /api/courses/{id}/history:
    get:
      tags:
      - course-controller
      operationId: getCourseHistoryById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HistoryDataCourseDto'
  /api/courses/search:
    get:
      tags:
      - course-controller
      operationId: searchCourse
      parameters:
      - name: id
        in: query
        required: false
        schema:
          type: integer
          format: int64
      - name: name
        in: query
        required: false
        schema:
          type: string
      - name: full
        in: query
        required: false
        schema:
          type: boolean
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: size
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: sort
        in: query
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CourseDto'
components:
  schemas:
    CourseDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        teachers:
          type: array
          items:
            $ref: '#/components/schemas/TeacherDto'
        students:
          type: array
          items:
            $ref: '#/components/schemas/StudentDto'
    StudentDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        dateOfBirth:
          type: string
          format: date
        semester:
          type: integer
          format: int32
        centralId:
          type: integer
          format: int64
        usedFreeSemester:
          type: integer
          format: int32
    TeacherDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        dateOfBirth:
          type: string
          format: date
    HistoryDataCourseDto:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/CourseDto'
        revisionType:
          type: string
          enum:
          - ADD
          - MOD
          - DEL
        revision:
          type: integer
          format: int32
        date:
          type: string
          format: date-time