spring.mvc.format.date-time=yyyy-MM-dd'T'HH:mm:ss.SSSXXX
spring.jackson.time-zone=Europe/Budapest
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=none
spring.jpa.open-in-view=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
server.error.include-message=always
spring.flyway.baseline-on-migrate=true

#SQL creation with the help of spring JPA
#spring.jpa.properties.jakarta.persistence.schema-generation.create-source=metadata
#spring.jpa.properties.jakarta.persistence.schema-generation.scripts.action=create
#spring.jpa.properties.jakarta.persistence.schema-generation.scripts.create-target=create.sql

spring.datasource.url=jdbc:postgresql://localhost:5432/school
spring.datasource.username=postgres
spring.datasource.password=password

#Cron job schedule
update.student.used.free.semester.cron=*/59 * * * * *

#Second-level chaches infinispan-hibernate
spring.jpa.properties.hibernate.cache.use_second_level_cache=true
spring.jpa.properties.hibernate.cache.use_query_cache=true

#explicit meg kell adni melyik osztalyon akarunk alkalmazni cachet
spring.jpa.properties.jakarta.persistence.sharedCache.mode=ENABLE_SELECTIVE
spring.jpa.properties.hibernate.cache.infinispan.cfg=org/infinispan/hibernate/cache/commons/builder/infinispan-configs-local.xml
spring.jpa.properties.hibernate.cache.region.factory_class=infinispan

#spring.jpa.properties.hibernate.generate_statistics=true
spring.jpa.properties.hibernate.cache.infinispan.entity.expiration.max_idle=30000
spring.jpa.properties.hibernate.cache.infinispan.com.csullagrita.school.model.Student.expiration.max_idle=50000
spring.jpa.properties.hibernate.cache.infinispan.com.csullagrita.school.model.Teacher.expiration.max_idle=20000
spring.cache.infinispan.config=classpath:infinispan.xml

#Image handler
folder.profilePics=/tmp/homework/profile_pictures
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

#Artemis topic def
spring.artemis.broker-url=tcp://localhost:61616
spring.jms.pub-sub-domain=true

#oauth2 if we do it on server side
#spring.security.oauth2.client.registration.facebook.client-id=${CLIENT-ID}
#spring.security.oauth2.client.registration.facebook.client-secret=${CLIENT-SECRET}
#spring.security.oauth2.client.registration.facebook.scope=email,public_profile
